diff --git a/collector/internal/collector/collector.go b/collector/internal/collector/collector.go
index 63779c3..72e0623 100644
--- a/collector/internal/collector/collector.go
+++ b/collector/internal/collector/collector.go
@@ -18,17 +18,15 @@ import (
	"context"
	"fmt"
	"os"

-	"github.com/open-telemetry/opentelemetry-collector-contrib/confmap/provider/s3provider"
	"go.opentelemetry.io/collector/component"
	"go.opentelemetry.io/collector/confmap"
	"go.opentelemetry.io/collector/confmap/converter/expandconverter"
	"go.opentelemetry.io/collector/confmap/provider/envprovider"
	"go.opentelemetry.io/collector/confmap/provider/fileprovider"
-	"go.opentelemetry.io/collector/confmap/provider/httpprovider"
	"go.opentelemetry.io/collector/confmap/provider/yamlprovider"
	"go.opentelemetry.io/collector/otelcol"
	"go.uber.org/zap"
	"go.uber.org/zap/zapcore"

	"github.com/open-telemetry/opentelemetry-lambda/collector/internal/confmap/converter/disablequeuedretryconverter"
@@ -61,7 +59,7 @@ func getConfig(logger *zap.Logger) string {
 
 func NewCollector(logger *zap.Logger, factories component.Factories) *Collector {
 	l := logger.Named("NewCollector")
-	providers := []confmap.Provider{fileprovider.New(), envprovider.New(), yamlprovider.New(), httpprovider.New(), s3provider.New()}
+	providers := []confmap.Provider{fileprovider.New(), envprovider.New(), yamlprovider.New()}
 	mapProvider := make(map[string]confmap.Provider, len(providers))
 
 	for _, provider := range providers {
@@ -93,8 +91,8 @@ func NewCollector(logger *zap.Logger, factories component.Factories) *Collector
 func (c *Collector) Start(ctx context.Context) error {
 	params := service.CollectorSettings{
 		BuildInfo: component.BuildInfo{
-			Command:     "otelcol-lambda",
-			Description: "Lambda Collector",
+			Command:     "aws-otel-lambda",
+			Description: "ADOT Lambda Collector",
 			Version:     Version,
 		},
 		ConfigProvider: c.configProvider,
